// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "dev@mattiamueggler.ch"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pay": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Return specific customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "description": "PaymentRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessPayment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.CreditCard": {
            "type": "object",
            "properties": {
                "cardnumber": {
                    "type": "string"
                },
                "cvc": {
                    "type": "string"
                },
                "expire_month": {
                    "type": "integer"
                },
                "expire_year": {
                    "type": "integer"
                }
            }
        },
        "main.Customer": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "post_cod": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_nr": {
                    "type": "string"
                }
            }
        },
        "main.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "main.PaymentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "credit_card": {
                    "$ref": "#/definitions/main.CreditCard"
                },
                "currency": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/main.Customer"
                }
            }
        },
        "main.SuccessPayment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Stripe Payment Sample",
	Description:      "this is an stripe payment example",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
